/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)

GtkWidget*
create_acceuil (void)
{
  GtkWidget *acceuil;
  GtkWidget *fixed1;
  GtkWidget *calendar1;
  GtkWidget *button_valider;

  acceuil = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (acceuil), _("Acceuil"));

  fixed1 = gtk_fixed_new ();
  gtk_widget_show (fixed1);
  gtk_container_add (GTK_CONTAINER (acceuil), fixed1);

  calendar1 = gtk_calendar_new ();
  gtk_widget_show (calendar1);
  gtk_fixed_put (GTK_FIXED (fixed1), calendar1, 72, 40);
  gtk_widget_set_size_request (calendar1, 260, 184);
  gtk_calendar_display_options (GTK_CALENDAR (calendar1),
                                GTK_CALENDAR_SHOW_HEADING
                                | GTK_CALENDAR_SHOW_DAY_NAMES);

  button_valider = gtk_button_new_with_mnemonic (_("Valider"));
  gtk_widget_show (button_valider);
  gtk_fixed_put (GTK_FIXED (fixed1), button_valider, 264, 256);
  gtk_widget_set_size_request (button_valider, 68, 29);

  g_signal_connect ((gpointer) button_valider, "clicked",
                    G_CALLBACK (on_button_valider_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (acceuil, acceuil, "acceuil");
  GLADE_HOOKUP_OBJECT (acceuil, fixed1, "fixed1");
  GLADE_HOOKUP_OBJECT (acceuil, calendar1, "calendar1");
  GLADE_HOOKUP_OBJECT (acceuil, button_valider, "button_valider");

  return acceuil;
}

GtkWidget*
create_affichage (void)
{
  GtkWidget *affichage;
  GtkWidget *fixed2;
  GtkWidget *label1;
  GtkWidget *button_retour;
  GtkWidget *label_date;

  affichage = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (affichage), _("Affichage"));

  fixed2 = gtk_fixed_new ();
  gtk_widget_show (fixed2);
  gtk_container_add (GTK_CONTAINER (affichage), fixed2);

  label1 = gtk_label_new (_("Votre date est"));
  gtk_widget_show (label1);
  gtk_fixed_put (GTK_FIXED (fixed2), label1, 56, 112);
  gtk_widget_set_size_request (label1, 136, 25);

  button_retour = gtk_button_new_with_mnemonic (_("Retour"));
  gtk_widget_show (button_retour);
  gtk_fixed_put (GTK_FIXED (fixed2), button_retour, 40, 224);
  gtk_widget_set_size_request (button_retour, 68, 29);

  label_date = gtk_label_new ("");
  gtk_widget_show (label_date);
  gtk_fixed_put (GTK_FIXED (fixed2), label_date, 208, 112);
  gtk_widget_set_size_request (label_date, 96, 25);

  g_signal_connect ((gpointer) button_retour, "clicked",
                    G_CALLBACK (on_button_retour_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (affichage, affichage, "affichage");
  GLADE_HOOKUP_OBJECT (affichage, fixed2, "fixed2");
  GLADE_HOOKUP_OBJECT (affichage, label1, "label1");
  GLADE_HOOKUP_OBJECT (affichage, button_retour, "button_retour");
  GLADE_HOOKUP_OBJECT (affichage, label_date, "label_date");

  return affichage;
}

